import { Context } from 'telegraf'
import { IController } from './control.types'
import { rooms } from '../rooms/rooms'

export default class Controller implements IController {
    public createRoom(ctx: Context, name: string) {
        if (!ctx) throw new Error('ctx is not defined!')
        const userId = ctx.from?.id as number
        const newRoom = {
            name,
            players: [{ id: userId }]
        }

        rooms.push(newRoom)
        ctx.replyWithHTML(`‚úÖ–ö–æ–º–Ω–∞—Ç–∞ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º ${name} —Å–æ–∑–¥–∞–Ω–∞! –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ —Å—é–¥–∞ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ –∏ –∑—Ä–∏—Ç–µ–ª–µ–π!\n\nüòÄ<i>–û–ø–ø–æ–Ω–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏ <code>/join ${name}</code>, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫–∞–∫ –∏–≥—Ä–æ–∫,\nü•∏–∑—Ä–∏—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏ <code>/watch ${name}</code>, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫–∞–∫ –∑—Ä–∏—Ç–µ–ª—å</i>`)
        console.log(rooms, rooms[0].players)
    }

    public sendDefaultMessage(ctx: Context, command: string): void {
        const defaultMessage = command[0] === '/' ? '–ü–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ' : '–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞'
        ctx.reply(defaultMessage)
    }
}